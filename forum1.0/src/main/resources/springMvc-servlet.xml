<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--默认扫描 use-default-filters属性默认为true，意思为扫描所有并创建-->
    <context:component-scan base-package="org" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>
    </context:component-scan>
    <!-- 开启 SpringMvc的注解支持-->
    <!--默认会帮我们注册默认处理请求，参数和返回值的类，其中最主要的两个类-->
    <!--HandlerMapping的实现类的作用:  实现类RequestMappingHandlerMapping，它会处理@RequestMapping 注解，并将其注册到请求映射表中。-->
    <!--HandlerAdapter的实现类的作用：  实现类RequestMappingHandlerAdapter，则是处理请求的适配器，确定调用哪个类的哪个方法，并且构造方法参数，返回值。-->
    <!--当配置此注解后，Spring就知道了我们启用注解驱动。然后Spring通过context:component-scan/标签的配置，会自动为我们将扫描到的@Component，
      @Controller，@Service，@Repository等注解标记的组件注册到工厂中，来处理我们的请求-->

    <!--静态页面，如html,css,js,images可以访问 可以解决前端控制器拦截范围过大的问题 并可支持rest风格-->
    <!--对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求-->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--处理静态资源请求-->
    <!--所有的页面引用到/styles/**的资源都从/static_resources/css里面进行查找。-->
    <!--<mvc:resources mapping="/views" location="/com"></mvc:resources>-->

    <!--视图解析器-->
        <!--<bean id = "internalResourceView" class = "org.springframework.web.servlet.view.InternalResourceView">-->
            <!--<property name="prefix" value="/"></property>-->
            <!--<property name="suffix" value=".vue"></property>-->
        <!--</bean>-->

    <!--文件上传-->
    <bean id="commonsMultipartResolver" class ="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--编码-->
        <property name="defaultEncoding" value="utf-8"></property>
        <!--上传文件最大 30mb-->
        <property name="maxUploadSize" value="#{1024*1024*30}"></property>
    </bean>

</beans>